{"version":3,"sources":["webpack:///./src/components/GenerateLink/index.js","webpack:///./src/components/GenerateLink/styles.js","webpack:///./src/pages/generate-link.js"],"names":["GenerateLink","type","setType","useState","name","setName","showResult","setShowResult","successCopy","setSuccessCopy","isInvitation","setIsInvitation","data","loading","useGuestData","URL","encodeURIComponent","handleSetName","e","target","value","handleCopy","async","text","showAlert","navigator","clipboard","writeText","alert","err","___EmotionJSX","className","style","textAlign","Fragment","class","for","onChange","parseInt","placeholder","onClick","checked","role","marginTop","href","rel","color","textDecoration","marginLeft","map","d","index","offlineInvitation","code","mapURL","desc","fontSize","padding","styWrapper","styles","GenerateLinkWrapper","MainLayout","css"],"mappings":"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","file":"component---src-pages-generate-link-js-921a670ac39f078c7e67.js","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport useGuestData from '@/hooks/useGuestData';\n\nconst PERSONAL = 1;\nconst ALL = 2;\n\nfunction GenerateLink() {\n  const [type, setType] = useState(PERSONAL);\n  const [name, setName] = useState();\n  const [showResult, setShowResult] = useState(false);\n  const [successCopy, setSuccessCopy] = useState(false);\n  const [isInvitation, setIsInvitation] = useState(false);\n\n  const { data, loading } = useGuestData();\n\n  const URL = `https://thekusuma.com?to=${encodeURIComponent(name)}`;\n\n  const handleChange = (e) => {\n    setType(parseInt(e.target.value, 10));\n    setShowResult(false);\n  };\n\n  const handleSetName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleCopy = async (text, showAlert = false) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setSuccessCopy(true);\n      showAlert && alert('Berhasil');\n    } catch (err) {\n      setSuccessCopy(false);\n      alert('Failed to copy! :(');\n    }\n  };\n\n  const renderContentType = () => {\n    if (type === PERSONAL) {\n      return (\n        <Fragment>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nama Tamu</label>\n            <input\n              value={name}\n              onChange={handleSetName}\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Nama tamu..\"\n            ></input>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" onClick={() => setShowResult(true)}>\n            Generate Link\n          </button>\n        </Fragment>\n      );\n    }\n\n    if (type === ALL) {\n      return (\n        <Fragment>\n          <div class=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={isInvitation} onClick={() => setIsInvitation(!isInvitation)} /> Tipe\n              Invitation (Datang offline)\n            </label>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" onClick={() => setShowResult(true)}>\n            Generate Link\n          </button>\n        </Fragment>\n      );\n    }\n  };\n\n  const renderResult = () => {\n    if (!showResult) return null;\n\n    if (type === PERSONAL) {\n      return (\n        <div className=\"col-md-4 col-md-offset-4\">\n          <div class=\"alert alert-success\" role=\"alert\" style={{ marginTop: '20px' }}>\n            <strong>Berhasil!</strong> <br />\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\" style={{ color: 'green', textDecoration: 'underline' }}>\n              {URL}\n            </a>\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-xs\"\n              style={{ marginLeft: '8px' }}\n              onClick={() => handleCopy(URL)}\n            >\n              {successCopy ? 'Tersalin' : 'Salin'}\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    if (type === ALL) {\n      return (\n        <div className=\"col-md-10 col-md-offset-1\" style={{ marginTop: '28px' }}>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>No</th>\n                  <th>Nama</th>\n                  <th>Keterangan</th>\n                  <th>Link</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((d, index) => {\n                  const offlineInvitation = isInvitation ? `&type=invitation&code=${d.code}` : '';\n                  const mapURL = `https://thekusuma.com?to=${encodeURIComponent(d.name)}${offlineInvitation}`;\n                  return (\n                    <tr>\n                      <td>{index + 1}</td>\n                      <td>{d.name}</td>\n                      <td>{d.desc}</td>\n                      <td>\n                        <a href={mapURL} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'underline' }}>\n                          {mapURL}\n                        </a>\n                        <button\n                          className=\"btn btn-default btn-sm\"\n                          style={{ fontSize: '12px', padding: '4px 8px', marginLeft: '4px' }}\n                          onClick={() => handleCopy(mapURL, true)}\n                        >\n                          copy\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"title\">Generator of Link Invitation</h2>\n      <h3 className=\"title__sub\">Dinda & Indra Wedding</h3>\n\n      {loading && <h4 style={{ textAlign: 'center' }}>Memuat data..</h4>}\n\n      {!loading && (\n        <Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-4 col-md-offset-4\">\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Tipe Link</label>\n                <select class=\"form-control\" value={type} onChange={handleChange}>\n                  <option value={PERSONAL}>Individu</option>\n                  <option value={ALL}>Semua Undangan</option>\n                </select>\n              </div>\n              {renderContentType()}\n            </div>\n          </div>\n          <div className=\"row\">{renderResult()}</div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default GenerateLink;\n","import { css } from '@emotion/core';\n\nexport const styWrapper = css`\n  padding: 24px 8px 8px 8px;\n\n  .title {\n    text-align: center;\n  }\n\n  .title__sub {\n    text-align: center;\n    font-family: 'Cookie', cursive;\n    font-size: 3em;\n  }\n`;\n","import React from 'react';\n\nimport MainLayout from '@components/Layout';\nimport GenerateLink from '@components/GenerateLink';\nimport { styWrapper } from '@components/GenerateLink/styles';\n\nfunction GenerateLinkWrapper() {\n  return (\n    <MainLayout>\n      <div css={styWrapper}>{<GenerateLink />}</div>\n    </MainLayout>\n  );\n}\n\nexport default GenerateLinkWrapper;\n"],"sourceRoot":""}